<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			autoReload="true"
			internalLogLevel="Trace"
			internalLogFile=".\nlog.txt">

  <extensions>
    <!-- load NLog.Extended to enable ASP.NET-specific functionality -->
    <add assembly="NLog.Extended" />
  </extensions>

  <!-- define various log targets -->
  <targets>
    <!-- write logs to file -->
    <target xsi:type="File" name="fileTrace" fileName="${basedir}/logs/trace/${shortdate}.log"
						layout="${longdate} ${uppercase:${level}} ${message}" />

    <target xsi:type="File" name="fileDB" fileName="${basedir}/logs/db/${shortdate}.log"
						layout="${longdate} ${uppercase:${level}} ${message}" />

    <target xsi:type="File" name="fileError" fileName="${basedir}/logs/error/${shortdate}.log"
						layout="${longdate} ${message}" />

    <target xsi:type="File" name="fileInfo" fileName="${basedir}/logs/info/${shortdate}.log"
						layout="${longdate} ${message}" />

    <!-- write log message to database -->
    <target xsi:type="Database" name="db" connectionStringName="DatabaseContext">
      <!-- SQL command to be executed for each entry -->
      <commandText>
        INSERT INTO [Sistema].[LogEntries](TimeStamp, Message, Level, Logger, AssemblyVersion, Async, ActivityId, Callsite, Exception, [Identity], StackTrace, Controller, Action, IP)
        VALUES(getutcdate(), @msg, @level, @logger, @AssemblyVersion, @CustomAsync, @ActivityId, @Callsite, @Exception, @Identity, @StackTrace, @Controller, @Action, @IP)
      </commandText>

      <!-- parameters for the command -->
      <!-- https://github.com/nlog/nlog/wiki/Layout-Renderers -->
      <parameter name="@msg" layout="${message}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@AssemblyVersion" layout="${assembly-version:name=Suframa.Cadsuf.DataAccess.Database}" />
      <parameter name="@ActivityId" layout="${activityid}" />
      <parameter name="@Callsite" layout="${callsite}" />
      <parameter name="@Exception" layout="${exception:format=toString}" />
      <parameter name="@Identity" layout="${identity}" />
      <parameter name="@StackTrace" layout="${stacktrace}" />
      <parameter name="@Controller" layout="${aspnet-mvc-controller}" />
      <parameter name="@Action" layout="${aspnet-mvc-action}" />
      <parameter name="@IP" layout="${aspnet-request-ip}" />

      <!--https://stackoverflow.com/questions/12424301/how-do-i-log-a-custom-field-in-nlog-to-database-->
      <parameter name="@CustomAsync" layout="${gdc:CustomAsync}" />

      <!-- connection string -->
      <dbProvider>System.Data.SqlClient</dbProvider>

      <!-- commands to install database -->
      <!--
			<install-command>
				<text>CREATE DATABASE MyLogs</text>
				<connectionString>data source=172.24.128.19;initial catalog=cadsuf-fase1;persist security info=True;user id=cadsuf-fase1;password=cadsuf-fase1;MultipleActiveResultSets=True;</connectionString>
				<ignoreFailures>true</ignoreFailures>
			</install-command>
			-->

      <!--
			<install-command>
				<text>
					USE [cadsuf-fase1]
					GO

					/****** Object:  Table [Sistema].[LogEntries]    Script Date: 9/25/2017 9:25:02 AM ******/
					SET ANSI_NULLS ON
					GO

					SET QUOTED_IDENTIFIER ON
					GO

					CREATE TABLE [Sistema].[LogEntries](
						[id] [int] IDENTITY(1,1) NOT NULL,
						[TimeStamp] [datetime2](7) NULL,
						[Message] [nvarchar](max) NULL,
						[level] [nvarchar](10) NULL,
						[logger] [nvarchar](128) NULL,
						[AssemblyVersion] [nvarchar](128) NULL,
						[Async] [bit] NULL,
						[ActivityId] [nvarchar](128) NULL,
						[Callsite] [nvarchar](1024) NULL,
						[Exception] [nvarchar](1024) NULL,
						[Identity] [nvarchar](1024) NULL,
						[StackTrace] [nvarchar](1024) NULL,
						[Controller] [nvarchar](128) NULL,
						[Action] [nvarchar](128) NULL,
						[IP] [nvarchar](64) NULL,
					PRIMARY KEY CLUSTERED
					(
						[id] ASC
					)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
					) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

					GO
				</text>
			</install-command>
			-->

      <!-- commands to uninstall database -->
      <!--
			<uninstall-command>
				<text>DROP DATABASE MyLogs</text>
				<connectionString>server=.\SQLEXPRESS;database=master;integrated security=sspi</connectionString>
				<ignoreFailures>true</ignoreFailures>
			</uninstall-command>
			-->
    </target>
  </targets>

  <rules>
    <logger name="db" minlevel="Trace" writeTo="fileDB" />
    <logger name="*" minlevel="Trace" writeTo="fileTrace" />
    <logger name="*" minlevel="Error" writeTo="fileError" />
    <logger name="*" minlevel="Info" writeTo="fileInfo" />
    <logger name="db" minlevel="Error" writeTo="db" />
  </rules>
</nlog>